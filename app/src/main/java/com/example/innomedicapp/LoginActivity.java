package com.example.innomedicapp;import android.Manifest;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.PackageManager;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.media.Image;import android.support.v4.app.ActivityCompat;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.EditText;import android.widget.ImageView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.example.innomedicapp.util.ServerUrl;import org.json.JSONArray;import org.json.JSONObject;import java.io.File;import java.util.HashMap;import java.util.Map;public class LoginActivity extends AppCompatActivity {    private EditText et1, et2;    ImageView image;    Context context;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_login);        et1 = (EditText)findViewById(R.id.editText);        et2 = (EditText)findViewById(R.id.editText2);        SharedPreferences preferences = getSharedPreferences("data", Context.MODE_PRIVATE);        et1.setText(preferences.getString("email", ""));        context = this;        this.checkForSmsPermission();    }    @Override    public void onBackPressed() {        finish();    }    private void checkForSmsPermission() {        if (ActivityCompat.checkSelfPermission(this,                Manifest.permission.SEND_SMS) != PackageManager.PERMISSION_GRANTED) {            ActivityCompat.requestPermissions(this,                    new String[] {Manifest.permission.SEND_SMS},                    1);        }    }    public void login(View view) {        final String email = et1.getText().toString();        final String password = et2.getText().toString();        Toast.makeText(this, "Validando Datos", Toast.LENGTH_SHORT).show();        final String url = ServerUrl.getUrlApi() + "login";        RequestQueue queue = Volley.newRequestQueue(this);        StringRequest postRequest = new StringRequest(Request.Method.POST, url,                new Response.Listener<String>()                {                    @Override                    public void onResponse(String response) {                    try {                        JSONArray js = new JSONArray(response);                        JSONObject userJson = new JSONObject(js.getString(3));                        SharedPreferences preferences = getSharedPreferences("data", Context.MODE_PRIVATE);                        SharedPreferences.Editor editor = preferences.edit();                        editor.putInt("id", userJson.getInt("id"));                        editor.putString("name", userJson.getString("name"));                        editor.putString("email", email);                        editor.putString("password", password);                        editor.putString("phone", userJson.getString("phone"));                        editor.putString("img", userJson.getString("img"));                        editor.putInt("user_type", userJson.getInt("user_type"));                        editor.putInt("status", userJson.getInt("status"));                        editor.putString("token", js.getString(1));                        editor.commit();                        Intent newActivity = new Intent(context, PrincipalNav.class);                        startActivity(newActivity);                        finish();                    }catch (Exception e) {                        System.out.println(e.getMessage());                    }                    }                },                new Response.ErrorListener()                {                    @Override                    public void onErrorResponse(VolleyError error) {                        // error                        System.out.println("Error.Response: " + error.getMessage());                    }                }        ) {            @Override            protected Map<String, String> getParams()            {                Map<String, String>  params = new HashMap<String, String>();                params.put("email", email);                params.put("password", password);                return params;            }        };        queue.add(postRequest);    }}